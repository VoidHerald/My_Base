
/*Написать программу, которая создает массив из 10 целых чисел и выводит на экран только четные числа в обратном порядке.*/

#include "Header.h"
using namespace std;


void onlyEvenReverse() {
	//	Создаём начальный вектор
	vector<int> start_vector;


	srand(static_cast<unsigned int>(time(0)));
	//	Цикл 9 итераций
	for (int i = 0; i <= 9; i++) {
		// Вставляем в начало вектора случайное число от 0 до 9
		start_vector.insert(start_vector.begin(), rand() % 10);
	}



	cout << "  Начальный массив :" << endl << "\t";
	//	Цикл идёт по всем элементам вектора start_vector
	for (int elem : start_vector)
	{
		//	Выводим элемент
		cout << "[ " << elem << " ] ";
	}
	cout << endl;





	cout << "  Только чётные в обратном порядке ver 1:" << endl << "\t";

	//	Получам итератор (тип данных iterator  vector<int>::iterator)
	//	является указателем на элемент контейнера,
	//	итератор  end указывает на конец контейнера
	//	т.е на следующую позицию после последнего элемента
	auto i = start_vector.end();

	//	Цикл с предусловием которое определяет не равняется ли 
	//	указатель на текущий элемент --  указательм на последний элемент
	//	
	while(i!= start_vector.begin())
	{
		//Операция '--' смещает указатель на предудущий элемент
		--i;
		//Проверка на чётность
		if (*i % 2 == 0) {
			cout << "[ " << *i << " ] ";
		}
	}
	_getch();
	
	cout <<endl <<"  Только чётные в обратном порядке ver2:" << endl << "\t";
	//	То же самое что и предидущий цикл но в этот раз с использованием функций
	//	rbegin и rend возвращающих тип reverse_iterator
	// Реверсивные итераторы позволяют перебирать элементы контейнера в обратном направлении.
	// Цикл пока итератор начала не равен итератору конца
	for (auto i=start_vector.rbegin();i!= start_vector.rend();++i)
	{
		//	Проветка на чётность
		if (*i%2==0) {
		cout << "[ " << *i << " ] ";
		}
	}
	_getch();
	
}